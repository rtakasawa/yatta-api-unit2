version: 2.1
jobs:
  # rspecとrubocopの実行
  test:
    # CI環境にDockerを利用する場合の設定
    docker:
      # ベースとなるDockerイメージを指定する。
      - image: circleci/ruby:2.6.5-node-browsers-legacy
        # 環境変数の設定
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
          TZ: "Japan"
      - image: circleci/postgres
        environment:
          POSTGRES_PASSWORD: password

    # CI環境上にGitリポジトリをコピーする。
    steps:
      - checkout

      # キャッシュされた内容を取り出す
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      # 各種インストール
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path ./project/vendor/bundle
            yarn install

      # ./vendor/bundleのコードをキャッシュする
      - save_cache:
          paths:
            - ./project/vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # 開発環境ではDocker用にdatabase.ymlを編集したため、ci用にファイルをコピーする
      - run:
          name: setup database
          command: cp -v config/database.ci.yml config/database.yml

      # 開発環境ではDocker用にrails_helper.rbを編集したため、ci用にファイルをコピーする
      - run:
          name: setup rspec
          command: cp -v spec/rails_helper.ci.rb spec/rails_helper.rb

      - run: bundle exec rake db:create db:schema:load

      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: Rspec
          command: bundle exec rspec

      # テスト結果の保存(CircleCI上で見れる)
      - store_artifacts:
          path: tmp/screenshots
          destination: test-screenshots

  deploy:
    docker:
      - image: circleci/ruby:2.6.5-node-browsers-legacy
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
          TZ: "Japan"
      - image: circleci/postgres
        environment:
          POSTGRES_PASSWORD: password
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install

      # aws cliのinstall
      - run: sudo apt-get update && sudo apt-get install python3-pip groff-base
      - run: sudo pip3 install awscli --ignore-installed six

      # 設定した秘密鍵のFingerPrintを追記する
      - add_ssh_keys:
          fingerprints:
            - "ba:c5:3a:e6:fa:04:3d:c4:38:f4:d9:90:cb:41:7e:48"

      # masterブランチにpushされあた場合は、Capistranoを実行する
      # deploy_staging.shにdeployコマンドを記載
      - deploy:
          name: Capistrano deploy
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              exit 0
            fi
            script/deploy_staging.sh

workflows:
  version: 2.1
  workflows:
    jobs:
      - test
      - deploy:
          # testが終わったらdeployを行う
          requires:
              - test
